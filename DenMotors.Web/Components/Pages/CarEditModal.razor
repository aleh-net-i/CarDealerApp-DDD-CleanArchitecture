@rendermode InteractiveServer
@using DenMotors.Web.Data
@inject ApplicationDbContext Db

@if (Car != null)
{
    <div class="modal show d-block" tabindex="-1" style="background:rgba(0,0,0,0.2);">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@(Car.Id == 0 ? "Add Car" : "Edit Car")</h5>
                    <button type="button" class="btn-close" @onclick="OnCancel"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="Car" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label class="form-label">Purchase Date</label>
                                <InputDate class="form-control" @bind-Value="Car.PurchaseDate" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Status</label>
                                <InputSelect class="form-select" @bind-Value="Car.CarStatusId">
                                    @foreach (var status in CarStatuses)
                                    {
                                        <option value="@status.Id">@status.Name</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Make</label>
                                <InputSelect class="form-select" @bind-Value="Car.CarMakeId" @onchange="OnMakeChanged">
                                    @foreach (var make in CarMakes)
                                    {
                                        <option value="@make.Id">@make.Name</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Model</label>
                                <InputSelect class="form-select" @bind-Value="Car.CarModelId" disabled="@(Car.CarMakeId == 0)">
                                    @foreach (var model in CarModels.Where(m => m.CarMakeId == Car.CarMakeId))
                                    {
                                        <option value="@model.Id">@model.Name</option>
                                    }
                                </InputSelect>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Colour</label>
                                <InputText class="form-control" @bind-Value="Car.Colour" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Chassis Number</label>
                                <InputText class="form-control" @bind-Value="Car.ChassisNumber" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Purchase Cost (€)</label>
                                <InputNumber class="form-control" @bind-Value="Car.PurchaseCost" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Sale Price (€)</label>
                                <InputNumber class="form-control" @bind-Value="Car.SalePrice" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Date of Sale</label>
                                <InputDate class="form-control" @bind-Value="Car.DateOfSale" />
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Deposit (€)</label>
                                <InputNumber class="form-control" @bind-Value="Car.Deposit" />
                            </div>
                            <div class="col-12">
                                <label class="form-label">Comments</label>
                                <InputTextArea class="form-control" @bind-Value="Car.Comments" Rows="3" />
                            </div>
                        </div>
                        <div class="mt-4 d-flex gap-2">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
                        </div>
                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger mt-2">@errorMessage</div>
                        }
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public Car Car { get; set; } = new();
    [Parameter] public List<CarMake> CarMakes { get; set; } = new();
    [Parameter] public List<CarModel> CarModels { get; set; } = new();
    [Parameter] public List<CarStatus> CarStatuses { get; set; } = new();
    [Parameter] public EventCallback OnSaved { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private string? errorMessage;

    private async Task HandleValidSubmit()
    {
        errorMessage = null;
        try
        {
            if (Car.Id == 0)
            {
                Db.Cars.Add(Car);
            }
            else
            {
                Db.Cars.Update(Car);
            }
            await Db.SaveChangesAsync();
            await OnSaved.InvokeAsync();
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private void OnMakeChanged(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out var makeId))
            Car.CarMakeId = makeId;
        else
            Car.CarMakeId = 0;
        Car.CarModelId = 0;
    }
} 